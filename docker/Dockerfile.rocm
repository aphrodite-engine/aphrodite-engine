ARG REMOTE_APHRODITE="0"
ARG COMMON_WORKDIR=/app
ARG BASE_IMAGE=rocm/vllm-dev:base

FROM ${BASE_IMAGE} AS base

ARG ARG_PYTORCH_ROCM_ARCH
ENV PYTORCH_ROCM_ARCH=${ARG_PYTORCH_ROCM_ARCH:-${PYTORCH_ROCM_ARCH}}

# Install some basic utilities
RUN apt-get update -q -y && apt-get install -q -y \
    sqlite3 libsqlite3-dev libfmt-dev libmsgpack-dev libsuitesparse-dev \
    apt-transport-https ca-certificates wget curl
# Remove sccache    
RUN python3 -m pip install --upgrade pip
RUN apt-get purge -y sccache; python3 -m pip uninstall -y sccache; rm -f "$(which sccache)"
ARG COMMON_WORKDIR
WORKDIR ${COMMON_WORKDIR}


# -----------------------
# aphrodite fetch stages
FROM base AS fetch_aphrodite_0
ONBUILD COPY ./ aphrodite/
FROM base AS fetch_aphrodite_1
ARG APHRODITE_REPO="https://github.com/aphrodite-engine/aphrodite-engine.git"
ARG APHRODITE_BRANCH="main"
ONBUILD RUN git clone ${APHRODITE_REPO} \
	    && cd aphrodite-engine \
	    && git fetch -v --prune -- origin ${APHRODITE_BRANCH} \
	    && git checkout FETCH_HEAD
FROM fetch_aphrodite_${REMOTE_APHRODITE} AS fetch_aphrodite

# -----------------------
# aphrodite build stages
FROM fetch_aphrodite AS build_aphrodite
# Build aphrodite
RUN cd aphrodite \
    && python3 -m pip install -r requirements/rocm.txt \
    && python3 setup.py clean --all  \
    && python3 setup.py bdist_wheel --dist-dir=dist
FROM scratch AS export_aphrodite
ARG COMMON_WORKDIR
COPY --from=build_aphrodite ${COMMON_WORKDIR}/aphrodite-engine/dist/*.whl /
COPY --from=build_aphrodite ${COMMON_WORKDIR}/aphrodite-engine/requirements /requirements
COPY --from=build_aphrodite ${COMMON_WORKDIR}/aphrodite-engine/examples /examples

# -----------------------
# Final aphrodite image
FROM base AS final

RUN python3 -m pip install --upgrade pip && rm -rf /var/lib/apt/lists/*
# Error related to odd state for numpy 1.20.3 where there is no METADATA etc, but an extra LICENSES_bundled.txt.
# Manually remove it so that later steps of numpy upgrade can continue
RUN case "$(which python3)" in \
        *"/opt/conda/envs/py_3.9"*) \
            rm -rf /opt/conda/envs/py_3.9/lib/python3.9/site-packages/numpy-1.20.3.dist-info/;; \
        *) ;; esac

RUN python3 -m pip install --upgrade huggingface-hub[cli]

# Install aphrodite
RUN --mount=type=bind,from=export_aphrodite,src=/,target=/install \
    cd /install \
    && pip install -U -r requirements/rocm.txt \
    && pip uninstall -y aphrodite-engine \
    && pip install *.whl

ARG COMMON_WORKDIR


COPY --from=export_aphrodite /examples ${COMMON_WORKDIR}/aphrodite-engine/examples

ENV RAY_EXPERIMENTAL_NOSET_ROCR_VISIBLE_DEVICES=1
ENV TOKENIZERS_PARALLELISM=false

# ENV that can improve safe tensor loading, and end-to-end time
ENV SAFETENSORS_FAST_GPU=1

# Performance environment variable.
ENV HIP_FORCE_DEV_KERNARG=1

CMD ["/bin/bash"]